@model SadguruCRM.Models.Service_Scope_Master

@{
    ViewBag.Title = "Create";
}

<h2>Service Scope</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Create</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group row">
    <div class="col-3">
        @Html.LabelFor(model => model.ServiceGroupID, "ServiceGroupID", htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("ServiceGroupID", null, "-- SELECT --", htmlAttributes: new { @class = "form-control", @onchange = "populateServices(this);", @required = "required" })
        @Html.ValidationMessageFor(model => model.ServiceGroupID, "", new { @class = "text-danger" })
    </div>
    <div class="col-3">
        @Html.LabelFor(model => model.ServiceID, "ServiceID", htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("ServiceID", null, "-- SELECT --", htmlAttributes: new { @class = "form-control", @required = "required" })
        @Html.ValidationMessageFor(model => model.ServiceID, "", new { @class = "text-danger" })
    </div>
    <div class="col-3">
        @Html.LabelFor(model => model.Order, "Order", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control"} } )
        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group row">
        <div class="col">
            @Html.LabelFor(model => model.Service_Scope, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.Service_Scope, 10, 200, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Service_Scope, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-12">
            <input type="submit" value="Save" class="btn btn-secondary" style="float:right;" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Themes/ckeditor4.15.0/ckeditor.js"></script>
<script>
    
        CKEDITOR.config.filebrowserUploadMethod = 'form';
    CKEDITOR.config.extraPlugins = 'justify,image2';
    CKEDITOR.replace("Service_Scope", {
        filebrowserBrowseUrl: '/Estimates/uploadPartial',
        filebrowserImageBrowseUrl: '/Estimates/uploadPartial',
        filebrowserUploadUrl: '/Estimates/uploadnow',
        filebrowserImageSourceUrl: '/Estimates/uploadnow',
        filebrowserImageUploadUrl: '/Estimates/uploadnow'
    });
    function updateValue(className, value) {
        // this gets called from the popup window and updates the field with a new value 
        debugger;
        var jqueryObjectByClass = $(".cke_dialog_ui_input_text")[1];
        jqueryObjectByClass.value = value;
    }
    function populateServices(obj) {
        debugger;
            if ($(obj).val() == "") {
                var services = "<select id='ServiceID' name = 'ServiceID' required='required'>";
                services = services + '<option value>--SELECT--</option>';
                services = services + '</select>';
                $(obj).parent().closest('.row').find('#ServiceID').html(services);
                //$(obj).closest("#ServiceID").html(services);
            } else {
                $.ajax({
                    type: "post",
                    url: "/Leads/GetServices",
                    data: { ServiceGroupID: $(obj).val() },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        var services = "<select id='ServiceID' name = 'ServiceID' required='required'>";
                        services = services + '<option value="">--SELECT--</option>';
                        for (var i = 0; i < data.length; i++) {
                            services = services + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                        }
                        services = services + '</select>';
                        $(obj).parent().closest('.row').find('#ServiceID').html(services);
                        //$(obj).closest('#ServiceID').html(services);
                    }
                });
            }
        }
</script>
