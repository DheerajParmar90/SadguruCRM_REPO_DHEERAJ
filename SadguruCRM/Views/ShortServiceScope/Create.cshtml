@model SadguruCRM.Models.Short_Service_Scope_Master

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Short Service Scope</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Service Group", "Service Group", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceGroupID", (SelectList)ViewBag.ServiceGroupID, "-- SELECT --", htmlAttributes: new { @required = "required", @class = "form-control ServiceGroupID restrict-dropdown-widths selectpicker", @onchange = "populateServices(this);", @data_live_search = "true" })
                @Html.ValidationMessageFor(model => model.ServiceGroupID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Service", "Service", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceID", null, "-- SELECT --", htmlAttributes: new { @required = "required", @class = "form-control ServiceID restrict-dropdown-widths selectpicker", @data_live_search = "true", @onchange = "calculateTax(this);" })
                @Html.ValidationMessageFor(model => model.ServiceID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Short Service Scope", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Short_Service_Scope, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Short_Service_Scope, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-secondary" style="float:right;margin-left:5px;"  />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @type = "button", @class = "btn btn-outline-secondary" })
</div>

<script>
    function populateServices(obj) {
        debugger;
        if ($(obj).val() == "") {
            var services = "<select class='form-control restrict-dropdown-widths selectpicker' data_live_search='true' id='ServiceID' name = 'ServiceID'  onchange='calculateTax(this);'>";
            services = services + '<option value>--SELECT--</option>';
            services = services + '</select>';
            $('#ServiceID').html(services);
            //$(obj).closest("#ServiceID").html(services);
        } else {
            $.ajax({
                type: "post",
                url: "/Leads/GetServices",
                data: { ServiceGroupID: $(obj).val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var services = "<select class='form-control restrict-dropdown-widths selectpicker' data_live_search='true' id='ServiceID' name = 'ServiceID' onchange='calculateTax(this);'>";
                    services = services + '<option value="">--SELECT--</option>';
                    for (var i = 0; i < data.length; i++) {
                        services = services + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    services = services + '</select>';
                    $('#ServiceID').html(services);
                    $('#ServiceID').selectpicker('refresh');
                    //$(obj).closest('#ServiceID').html(services);

                }
            });
        }
    }
</script>