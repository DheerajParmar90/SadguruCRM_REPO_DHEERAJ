@model SadguruCRM.Models.Documents_Templates

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>LetterHead Templates</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Document_Template_ID)
        @Html.HiddenFor(model => model.CreatedOn)
        @Html.HiddenFor(model => model.CreatedByUserID)

        <div class="form-group">
            <div class="col-md-12">
                @Html.Label("LetterHead Name", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Document_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.Label("Header", htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Document_Header, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document_Header, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.Label("Footer", htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Document_Footer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document_Footer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-secondary" style="float:right;" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @type = "button", @class = "btn btn-outline-secondary" })
</div>

<script src="~/Themes/ckeditor4.15.0/ckeditor.js"></script>
<script>
    CKEDITOR.config.filebrowserUploadMethod = 'form';
    CKEDITOR.config.extraPlugins = 'justify,image2,button,panel,floatpanel,listblock,richcombo,font';
    CKEDITOR.replace("Document_Header", {
        filebrowserBrowseUrl: '/DocumentsTemplates/uploadPartial',
        filebrowserImageBrowseUrl: '/DocumentsTemplates/uploadPartial',
        filebrowserUploadUrl: '/DocumentsTemplates/uploadnow',
        filebrowserImageSourceUrl: '/DocumentsTemplates/uploadnow',
        filebrowserImageUploadUrl: '/DocumentsTemplates/uploadnow'
    });
    CKEDITOR.replace("Document_Footer", {
        filebrowserBrowseUrl: '/DocumentsTemplates/uploadPartial',
        filebrowserImageBrowseUrl: '/DocumentsTemplates/uploadPartial',
        filebrowserUploadUrl: '/DocumentsTemplates/uploadnow',
        filebrowserImageSourceUrl: '/DocumentsTemplates/uploadnow',
        filebrowserImageUploadUrl: '/DocumentsTemplates/uploadnow'
    });

    function updateValue(className, value) {
        // this gets called from the popup window and updates the field with a new value
        debugger;
        //alert(window.opener);
        //var jqueryObjectByClass1 = $(".cke_dialog_ui_input_text")[1];
        //jqueryObjectByClass1.value = value;
        //var jqueryObjectByClass2 = $(".cke_dialog_ui_input_text")[13];
        //jqueryObjectByClass2.value = value;
        //var allTextboxes = document.getElementsByClassName('.cke_dialog_ui_input_text');
        //allTextboxes.forEach(function (item, index) {
        //    item.value = value;
        //});
        //var windowOpener = window.opener;
        //$.each($("a[title='Browse Server']"), function (index, item) {
        //    $(item).val(value);
        //});
    }
</script>